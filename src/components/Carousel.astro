---
export interface Props {
  className?: string;
  wrapAround?: boolean;
  prevNextButtons?: boolean;
  cellAlign?: "left" | "center" | "right";
  activeCellWidth?: string;
  buttonPosition?: "inside" | "outside";
  autoPlay?: boolean;
}

import "flickity/dist/flickity.min.css";

const {
  className = "",
  cellAlign = "center",
  wrapAround = true,
  prevNextButtons = true,
  activeCellWidth = "75%",
  buttonPosition = "inside",
  autoPlay = false,
} = Astro.props;
---

<div
  x-cloak
  class={`w-full h-full text-white flex items-center justify-center ${className}`}
>
  <div
    class="w-full grid grid-cols-1"
    x-data={`carousel({
      cellAlign: "${cellAlign}",
      wrapAround: ${wrapAround},
      prevNextButtons: ${prevNextButtons},
      groupCells: "${activeCellWidth}",
      buttonPosition: "${buttonPosition}",
      autoPlay: ${autoPlay},
    })`}
  >
    <div
      class={`carousel col-start-1 row-start-1 ${
        buttonPosition === "outside" && "carousel--btn-outside"
      }`}
      x-ref="carousel"
    >
      <slot name="template" />
    </div>
  </div>
</div>

<script>
  import Flickity from "flickity";

  document.addEventListener("alpine:init", () => {
    Alpine.data("carousel", (opts) => ({
      active: 0,
      opts,
      init() {
        console.log(59);
        var carousel = new Flickity(this.$refs.carousel, {
          ...this.opts,
          arrowShape:
            "M39.7407 50L62 18.0197L53.4492 12L27 50L53.4492 88L62 81.9803L39.7407 50Z",
          pageDots: false,
        });
        carousel.on("change", (i) => (this.active = i));
      },
    }));
  });
</script>
