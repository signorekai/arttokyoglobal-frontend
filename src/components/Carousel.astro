---
export interface Props {
  className?: string;
  wrapAround?: boolean;
  prevNextButtons?: boolean;
}

import "flickity/dist/flickity.min.css";

const {
  className = "",
  wrapAround = true,
  prevNextButtons = true,
} = Astro.props;
---

<div
  class={`w-full h-full text-white flex items-center justify-center ${className}`}
>
  <div class="w-full grid grid-cols-1" x-data="carousel()" x-init="init()">
    <div class="carousel col-start-1 row-start-1" x-ref="carousel">
      <slot />
    </div>
  </div>
</div>

<style is:global>
  .flickity-slider {
    @apply flex items-center;
  }

  .flickity-cell:not(.is-selected) {
    @apply opacity-40;
  }

  .flickity-button.flickity-prev-next-button {
    @apply rounded-xl;
    @apply focus:shadow-none;
  }
</style>

<style>
  .carousel-item {
    @apply w-2/3 md:w-1/4 px-2;
  }
</style>

<script>
  import Flickity from "flickity";
  window.Flickity = Flickity;
</script>

<script define:vars={{ wrapAround, prevNextButtons }}>
  document.addEventListener("alpine:init", () => {
    Alpine.data("carousel", () => ({
      active: 0,
      init() {
        var flkty = new Flickity(this.$refs.carousel, {
          arrowShape:
            "M39.7407 50L62 18.0197L53.4492 12L27 50L53.4492 88L62 81.9803L39.7407 50Z",
          wrapAround,
          groupCells: "75%",
          prevNextButtons,
          pageDots: false,
        });
        flkty.on("change", (i) => (this.active = i));
      },
    }));
  });
  // function carousel() {
  //   return {
  //     active: 0,
  //     init() {
  //       console.log("hi");
  //       var flkty = new Flickity(this.$refs.carousel, {
  //         wrapAround: true,
  //       });
  //       flkty.on("change", (i) => (this.active = i));
  //     },
  //   };
  // }
</script>
