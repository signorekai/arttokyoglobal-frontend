---
export interface Props {
  className?: string;
  wrapAround?: boolean;
  prevNextButtons?: boolean;
  cellAlign?: "left" | "center" | "right";
  activeCellWidth?: string;
}

import "flickity/dist/flickity.min.css";

const {
  className = "",
  cellAlign = "center",
  wrapAround = true,
  prevNextButtons = true,
  activeCellWidth = "75%",
} = Astro.props;
---

<div
  class={`w-full h-full text-white flex items-center justify-center ${className}`}
>
  <div
    class="w-full grid grid-cols-1"
    x-data={`{
      active: 0,
      init() {
        var carousel = new Flickity(this.$refs.carousel, {
          wrapAround: ${wrapAround},
          prevNextButtons: ${prevNextButtons},
          cellAlign: "${cellAlign}",
          arrowShape:
            'M39.7407 50L62 18.0197L53.4492 12L27 50L53.4492 88L62 81.9803L39.7407 50Z',
          groupCells: "${activeCellWidth}",
          pageDots: false,
        });
        carousel.on('change', (i) => (this.active = i));
      },
    }`}
    x-init={`init()`}
  >
    <div class="carousel col-start-1 row-start-1" x-ref="carousel">
      <slot />
    </div>
  </div>
</div>

<style>
  .carousel {
    :global(.flickity-slider) {
      @apply flex items-center;
    }

    :global(.flickity-cell:not(.is-selected)) {
      @apply opacity-40;
    }

    :global(.flickity-button.flickity-prev-next-button) {
      @apply rounded-xl;
      @apply focus:shadow-none;
    }
  }
</style>

<script>
  import Flickity from "flickity";
  window.Flickity = Flickity;
</script>
