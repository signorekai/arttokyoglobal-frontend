---
import Layout from "../../layouts/Layout.astro";
import Dropdown from "../../components/Dropdown.astro";
import ProjectStatusTemplate from "../../components/ProjectStatus.client.astro";
import { fetchFromAPI } from "../../library/helpers";

const { artistSlug } = Astro.params;

const { data } = await fetchFromAPI("/artists", {
  filters: {
    slug: artistSlug,
  },
  populate: [
    "collections",
    "collections.tokens",
    "tokens",
    "profilePhoto",
    "coverImg",
    "collections.coverImg",
  ],
  fields: ["name", "bio", "description"],
});
const artist = data[0];

export async function getStaticPaths() {
  const { data: artists } = await fetchFromAPI("/artists", {
    fields: ["slug"],
  });

  const artistSlugs = artists.map((artist) => ({
    params: { artistSlug: artist.slug },
  }));
  return artistSlugs;
}
---

<Layout title={artist.name}>
  <main>
    <div
      class="w-full aspect-video max-h-screen-2/3 bg-cover bg-center"
      style={`background-image: url(${artist.coverImg.url})`}
    >
    </div>
    <div class="container container-grid">
      <div
        class="relative col-start-1 col-span-1 md:col-span-8 lg:col-start-4 lg:col-span-8 flex flex-col lg:flex-row items-center lg:justify-end"
      >
        <div
          class="order-2 lg:order-1 p-4 pb-4 lg:p-6 lg:pr-0 w-full lg:w-1/2 lg:mr-[37%] text-center lg:text-right"
        >
          <h2 x-data="fadeUp" x-bind="fadeUp" class="fade-up--2">
            {artist.name}
          </h2>
          <div
            x-data="fadeUp"
            x-bind="fadeUp"
            class="fade-up--2 text-body font-trade-gothic md:w-4/5 lg:w-auto md:mx-auto"
            set:html={artist.bio}
          >
          </div>
        </div>
        <div
          x-data="fadeUp"
          x-bind="fadeUp"
          class="fade-up--2 w-32 md:w-64 aspect-square overflow-hidden order-1 -mt-16 md:-mt-24 lg:mt-0 lg:order-2 lg:absolute right-0 bottom-0 rounded-xl"
        >
          <div
            x-data="imageHelper(artist.profilePhoto, 'small')"
            x-bind="backgroundImage"
            class="w-full h-full bg-cover bg-center"
            alt=""
          >
          </div>
        </div>
      </div>
      <div
        class="col-start-1 md:col-start-2 lg:col-start-2 col-span-1 md:col-end-8 lg:col-end-12 py-4 pt-0 lg:pt-4"
      >
        <div
          x-data="fadeUp"
          x-bind="fadeUp"
          class="fade-up--3 w-full order-3 text-center lg:text-right"
          set:html={artist.description}
        >
        </div>
      </div>
    </div>
    <section class="relative m-0 md:mt-8 has-bg has-bg--large has-bg--inline">
      <div
        class="container px-4 lg:px-10"
        x-data={`filterables({id: "artist", listenTo: ['sortBy'], data: ${JSON.stringify(
          artist.collections
        )}})`}
      >
        <div
          class="pt-8 lg:pt-0 px-4 md:px-8 lg:px-0 dropdown-wrapper flex-row z-40"
        >
          <Dropdown
            className="block"
            label="Sort By"
            id="sortBy"
            listenTo="artist"
            selects={[
              { label: "A-Z", sorting: [["title"], ["asc"]] },
              { label: "Z-A", sorting: [["title"], ["desc"]] },
            ]}
          />
          <h3 class="pt-2">Collections</h3>
        </div>
        <div
          class="transition-opacity flex flex-col mt-8 md:mt-12 lg:mt-8 gap-y-8 lg:gap-y-16"
          x-ref="container"
          x-bind="container"
        >
          <template x-for="collection in filtered" x-bind:key="collection.slug">
            <div
              x-data="{ show: false }"
              x-intersect.threshold.30="show = true"
              class="md:grid grid-cols-10 transition-all mx-6 md:mx-8 lg:mx-0"
              :class="show === false ? 'opacity-0 translate-y-2' : 'opacity-100 translate-y-0'"
            >
              <div class="col-span-4">
                <a
                  x-bind:href="`/collections/${collection.slug}`"
                  class="transition-all block overflow-hidden"
                  x-data="imageHelper(collection.coverImg, 'medium')"
                >
                  <div
                    x-bind="backgroundImage"
                    class="aspect-square w-full hover:scale-110 transition-all bg-cover bg-center"
                  >
                  </div>
                </a>
              </div>
              <div
                class="mt-6 md:mt-0 col-span-6 flex flex-col items-end text-right justify-center"
              >
                <ProjectStatusTemplate />
                <a
                  x-bind:href="`/collections/${collection.slug}`"
                  class="text-right w-full lg:max-w-[75%]"
                >
                  <h1 class="mt-4" x-text="collection.title"></h1>
                </a>
                <h4 class="font-normal mt-1">
                  <strong x-text="collection.tokens.length"></strong>
                  of <strong x-text="collection.totalTokens"></strong>
                  minted
                </h4>
                <div
                  class="collection-description mt-2 md:ml-10"
                  x-html="collection.description"
                >
                </div>
              </div>
            </div>
          </template>
        </div>
      </div>
    </section>
  </main>
</Layout>
<script>
  import Alpine from "alpinejs";
  import intersect from "@alpinejs/intersect";

  Alpine.plugin(intersect);
</script>
