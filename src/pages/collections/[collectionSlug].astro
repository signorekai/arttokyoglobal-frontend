---
import Layout from "../../layouts/Layout.astro";
import ProjectStatus from "../../components/ProjectStatus.astro";
import Dropdown from "../../components/LinksDropdown.astro";
import { fetchFromAPI, getLargestPossibleImage } from "../../library/helpers";
import ethLogo from "../../images/eth-logo.png";

import { ethereumMainnet as ethereumConfig } from "../../library/network-config";

import MintPrice from "../../components/MintPrice.client.astro";
import MintWidget from "../../components/MintWidget.client.astro";

import "@fancyapps/ui/dist/fancybox.css";

const { collectionSlug } = Astro.params;

import masterWhitelist from "../../whitelist.json";

const { url } = Astro.request;
const urlSearchParams = new URLSearchParams(url.split("?")[1]);
let page = Number.isFinite(Number(urlSearchParams.get("page")))
  ? Number(urlSearchParams.get("page"))
  : 1;

if (page === 0) page = 1;

const { data } = await fetchFromAPI("/collections", {
  filters: {
    slug: collectionSlug,
  },
  populate: ["artist", "coverImg", "artist.profilePhoto"],
  fields: [
    "CID",
    "ABI",
    "title",
    "slug",
    "status",
    "totalTokens",
    "description",
    "dynamicStart",
    "startDate",
    "mintPrice",
    "totalTokens",
    "totalSupply",
    "contractAddress",
    "whitelistMintEnabled",
    "showTokens",
  ],
});

if (data.length === 0) {
  return Astro.redirect("/404");
}

let collection = data[0];
collection.tokens = [];

let sorting = "tokenId:asc";

if (collection.showTokens) {
  let sortParam = urlSearchParams.get("sort");
  const allowedSorting = ["tokenId"];

  if (
    sortParam !== null &&
    allowedSorting.indexOf(sortParam.split(":")[0]) > -1
  ) {
    sorting = sortParam;
  }

  const { data: tokenData, meta } = await fetchFromAPI("/tokens", {
    sort: [sorting],
    filters: {
      collection: {
        slug: collectionSlug,
      },
    },
    populate: ["image"],
    fields: ["title", "slug", "tokenId"],
    pagination: {
      pageSize: 9,
      page,
    },
  });

  collection.tokens = tokenData;
  collection.tokenMeta = meta;

  const previousParams = new URLSearchParams(url.split("?")[1]);
  previousParams.set(
    "page",
    meta.pagination.page - 1 > 0 ? String(meta.pagination.page - 1) : "1"
  );

  const nextParams = new URLSearchParams(url.split("?")[1]);
  nextParams.set(
    "page",
    meta.pagination.page < meta.pagination.pageCount
      ? meta.pagination.page + 1
      : meta.pagination.pageCount
  );

  collection.pagination = {
    previous: `${url.split("?")[0]}?${previousParams.toString()}#tokens`,
    next: `${url.split("?")[0]}?${nextParams.toString()}#tokens`,
  };
}

let sortingOptions = [
  {
    label: "ID (Ascending)",
    sorting: "tokenId:asc",
  },
  {
    label: "ID (Descending)",
    sorting: "tokenId:desc",
  },
];

const defaultOption = sortingOptions.filter((o) => o.sorting === sorting);
const remainingOptions = sortingOptions.filter((o) => o.sorting !== sorting);

sortingOptions = [...defaultOption, ...remainingOptions];

if (masterWhitelist.hasOwnProperty(collection.slug)) {
  collection.whitelistedAddresses = masterWhitelist[collection.slug];
}
---

<Layout title={collection.title}>
  <h4
    class="container mt-4 md:mt-8 px-4 opacity-60 hover:opacity-100 transition-opacity"
  >
    <a href="/collections"
      ><i class="fas fa-caret-square-left"></i> Back to Collections</a
    >
  </h4>
  <div
    class="container container-grid mt-4 items-center fade-up"
    x-data="fadeUp"
    x-bind="fadeUp"
  >
    <div class="col-start-1 col-span-6 lg:col-end-6 lg:pl-4 lg:pt-2 lg:pb-2">
      <a
        href={getLargestPossibleImage(collection.coverImg, "original")}
        data-fancybox
      >
        <div
          class="aspect-square bg-cover bg-center w-full h-auto"
          style={`background-image: url(${getLargestPossibleImage(
            collection.coverImg,
            "large"
          )})`}
        >
        </div>
      </a>
    </div>
    <div
      class="mt-6 lg:mt-0 col-start-2 col-end-8 lg:col-start-6 lg:col-end-13 lg:pr-4 flex flex-col items-end text-right justify-center"
    >
      <ProjectStatus status={collection.status} />
      <h1 class="text-right w-full lg:max-w-[75%] mt-6">{collection.title}</h1>
      <div
        class="flex flex-row gap-y-0.5 items-center md:justify-end mt-1 mb-2 group"
      >
        <div>
          <h4 class="block md:pl-5 pt-1 md:pt-0">
            By <a href={`/artists/${collection.artist.slug}`}
              >{collection.artist.name}
            </a>
          </h4>
          <h4 class="block md:pl-5 font-normal">
            <strong>{collection.totalSupply}</strong>
            of <strong>{collection.totalTokens}</strong> minted
          </h4>
        </div>
        <a
          href={`/artists/${collection.artist.slug}`}
          class="block overflow-hidden ml-3 rounded-xl"
        >
          <div
            class="aspect-square h-10 grayscale group-hover:grayscale-0 group-hover:scale-110 transition-all bg-cover bg-center"
            style={`background-image: url(${getLargestPossibleImage(
              collection.artist.profilePhoto,
              "thumbnail"
            )})`}
          >
          </div>
        </a>
      </div>
      <div
        class="collection-description md:ml-10"
        set:html={collection.description}
      >
      </div>
      <div class="flex flex-row mt-4">
        <h4 class="inline-flex flex-row pl-3 justify-center items-center">
          <img src={ethLogo} width="20" alt="" />
          <MintPrice mintPrice={collection.mintPrice} />
        </h4>
        <MintWidget
          collectionId={collection.id}
          collectionSlug={collection.slug}
          cid={collection.CID}
          contractAddress={collection.contractAddress}
          maxSupply={collection.totalTokens}
          totalSupply={collection.totalSupply}
          status={collection.status}
          ABI={JSON.stringify(collection.ABI)}
          dynamicStart={collection.dynamicStart}
          mintPrice={collection.mintPrice}
          startDate={collection.startDate}
          whitelistMintEnabled={collection.whitelistMintEnabled}
        />
      </div>
      <h6 class="mt-4">
        <a
          href={ethereumConfig.blockExplorer.generateContractUrl(
            collection.contractAddress
          )}
          target="_blank"
          ><span class="italic bold"
            >View on {ethereumConfig.blockExplorer.name}
          </span>
          <i class="fas fa-external-link-square"></i>
        </a>
      </h6>
    </div>
  </div>
  {
    collection.tokens.length > 0 && collection.showTokens === true && (
      <section
        x-data="fadeUp"
        x-bind="fadeUp"
        class="relative m-0 md:mt-4 lg:mt-12 p-4 lg:p-0 fade-up"
        id="tokens"
      >
        <div class="container bg-peach rounded-4xl px-6 py-4 md:px-11 md:py-8">
          <div class="dropdown-wrapper z-40">
            <div class="flex flex-col lg:flex-row items-start">
              <Dropdown
                className="block"
                label="Sort By"
                listenTo="allCollections"
                id="sortBy"
                options={sortingOptions}
              />
            </div>
            <h3 class="pt-2">Tokens</h3>
          </div>
          <div class="content-wrapper">
            <div class="transition-opacity grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 mt-8 lg:gap-y-4">
              {collection.tokens.map((token) => (
                <div class="carousel-item w-full">
                  <a
                    href={`/collections/${collection.slug}/tokens/${token.slug}`}
                  >
                    <div
                      style={`background-image: url(${getLargestPossibleImage(
                        token.image,
                        "small"
                      )}); aspect-ratio: ${token.image.width} / ${
                        token.image.height
                      };`}
                      class="rounded-4xl border-6 border-white bg-cover bg-center shadow-card"
                    />
                    <h4 class="text-center mt-3 text-black">
                      #{token.tokenId}
                    </h4>
                  </a>
                </div>
              ))}
            </div>
          </div>
          <div class="w-full flex flex-row justify-between items-center px-6 mt-3">
            <h4
              class={
                collection.tokenMeta.pagination.page === 1 &&
                "opacity-0 pointer-events-none"
              }
            >
              <a href={collection.pagination.previous}>
                <i class="mr-1 fa fa-arrow-left" />
                Prev<span class="hidden md:inline">ious</span>
              </a>
            </h4>
            <div
              x-data={`pageJump(${page})`}
              class="flex flex-row justify-center items-center"
            >
              <h4 class="hidden md:inline">View Tokens:</h4>
              <select
                x-model="page"
                class="text-center bg-transparent p-0 m-0 md:pr-5 font-futura-pt font-extrabold text-base tracking-wider "
              >
                {page !== 1 && (
                  <option value={page}>
                    {page * 9 - 8} - {page * 9}
                  </option>
                )}
                {[...Array(collection.tokenMeta.pagination.pageCount + 1)].map(
                  (x, i) => (
                    <>
                      {i > 0 && (
                        <option class="text-center" value={i}>
                          {i * 9 - 8} - {i * 9}
                        </option>
                      )}
                    </>
                  )
                )}
              </select>
            </div>
            <h4
              class={
                collection.tokenMeta.pagination.page ===
                  collection.tokenMeta.pagination.pageCount &&
                "opacity-0 pointer-events-none"
              }
            >
              <a href={collection.pagination.next}>
                Next
                <i class="ml-1 fa fa-arrow-right" />
              </a>
            </h4>
          </div>
        </div>
      </section>
    )
  }

  {
    collection.showTokens === false && (
      <div class="container px-4">
        <div class="rounded-4xl bg-peach px-4 md:px-8 py-8 mt-8 text-right">
          <h4 class="block text-center leading-tight">
            Currently hidden. <br />
            Check our{" "}
            <a
              href="https://discord.gg/arttokyoglobal"
              target="_blank"
              rel="noopener noreferrer"
            >
              Discord
            </a>{" "}
            to see when the tokens will be revealed!
          </h4>
        </div>
      </div>
    )
  }

  {
    collection.tokens.length === 0 && collection.showTokens && (
      <div class="container px-4">
        <div class="rounded-4xl bg-peach px-4 md:px-8 py-8 mt-8 text-right">
          <h4 class="block text-center leading-tight">
            None minted yet. You could be the first!
          </h4>
        </div>
      </div>
    )
  }
</Layout>

<script>
  import Alpine from "alpinejs";
  import intersect from "@alpinejs/intersect";
  import { Fancybox } from "@fancyapps/ui";

  Fancybox.bind("[data-fancybox]", {
    // Your options go here
  });

  Alpine.plugin(intersect);

  document.addEventListener("alpine:init", () => {
    Alpine.data("pageJump", (page) => ({
      page,
      init() {
        this.$watch("page", (value) => {
          const params = new URLSearchParams(window.location.search);
          params.set("page", value);
          window.location = `${window.location.origin}${
            window.location.pathname
          }?${params.toString()}#tokens`;
        });
      },
    }));
  });
</script>
